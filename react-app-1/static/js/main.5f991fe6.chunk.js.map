{"version":3,"sources":["components/Title.js","components/Search.js","components/NotificationDot.js","components/Notification.js","components/HeaderTags.js","components/Header.js","components/RoundButton.js","components/QnaButtons.js","components/QnaInteractive.js","components/Qna.js","components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["css","subtextCss","style","fontFamily","Title","className","Search","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","NotificationDot","Notification","HeaderTags","headerCss","Header","Button","color","text","QnaButtons","RoundButton","textCss","annoteStyle","QnaInteractive","priorityList","qnaStyle","scrollSnapAlign","questionCss","questionStyle","cardCss","Qna","question","answer","priority","Math","random","cardsCss","cardsStyle","scrollSnapType","Cards","appCss","appStyle","height","webkitTapHighlightColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","body","backgroundColor"],"mappings":"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","file":"static/js/main.5f991fe6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div style={style} className={css}>\r\n            <div>Hey Hursh!</div>\r\n            <div className={subtextCss}>A big day coming up tomorrow</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar css = `\r\npx-6 py-4\r\ntext-white\r\ntext-5xl\r\nspace-y-3\r\nlg:flex lg:flex-row lg:justify-between lg:items-centre\r\n`\r\nvar subtextCss = `\r\nanimate-pulse\r\ntext-4xl\r\ntext-gray-300\r\n`\r\nvar style = {\r\n    fontFamily: \"PT Sans\"\r\n} \r\nexport default Title\r\n","import React from 'react'\r\n\r\nconst Search = () => {\r\n    return (\r\n        <div className = {css}>\r\n            <svg className=\"flex-none w-6 h-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n            </svg>\r\n            <input className=\"w-2/4 lg:w-auto md:w-auto flex-1 ease-in-out bg-transparent focus:outline-none font-semibold\" type=\"text\"  placeholder=\"Search\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nvar css = `\r\nspace-x-3\r\nflex flex-row items-center px-5\r\ntransition duration-300\r\nfocus-within:bg-opacity-10\r\nfocus-within:text-red-100\r\ntext-gray-300 bg-white bg-opacity-20\r\nrounded-full\r\nborder-transparent\r\n`\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst NotificationDot = () => {\r\n    return (\r\n        <div className={css}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nvar css = `\r\nanimate-ping\r\nrounded-full\r\nborder-white\r\nborder-1\r\nbg-red-500\r\nw-2 h-2\r\nabsolute top-1 right-2\r\n`\r\n\r\nexport default NotificationDot\r\n","import React from 'react'\r\nimport NotificationDot from './NotificationDot'\r\n\r\nconst Notification = () => {\r\n    return (\r\n        <div className = {css}>\r\n            <NotificationDot />\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n</svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar css = `\r\ntext-gray-400 w-10 h-10\r\nrelative\r\n`\r\nexport default Notification\r\n","import Profile from './Profile'\r\nimport Notification from './Notification'\r\n\r\nimport React from 'react'\r\n\r\nconst HeaderTags = () => {\r\n    return (\r\n        <div className = {css}>\r\n            <Notification />\r\n        </div>\r\n    )\r\n}\r\n\r\nvar css = `\r\ntransition duration-300\r\nhover:bg-blue-100\r\nhover:bg-opacity-10\r\nflex flex-row\r\nitems-center\r\nbg-white bg-opacity-5\r\nrounded-lg\r\npy-3 px-2\r\nh-12\r\n`\r\n\r\nexport default HeaderTags\r\n","import React from 'react'\r\nimport Search from './Search'\r\nimport HeaderTags from './HeaderTags'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={headerCss}>\r\n            <HeaderTags />\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nvar headerCss = `\r\nbg-black\r\njustify-between\r\nspace-x-3\r\nflex flex-initial lg:space-x-5\r\npx-2 lg:px-6 py-3\r\n`\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Button = ({color,text}) => {\r\n    return (\r\n        <button className= {css+\" \"+color} style={style}>\r\n            <div className=\"font-bold text-lg\">{text}</div>\r\n        </button>\r\n    )\r\n}\r\n\r\nvar css = `\r\nshadow-2xl\r\ntransition \r\ntransform hover:scale-110 ease-in-out duration-500 \r\nhover:bg-opacity-50\r\nfocus:outline-none \r\nrounded-full w-16 h-16 flex items-center justify-center`\r\n\r\nvar style = {\r\n    fontFamily: 'Montserrat'\r\n}\r\nexport default Button","import React from 'react'\r\nimport RoundButton from './RoundButton'\r\n\r\nconst QnaButtons = () => {\r\n    return (\r\n        <div className={css}>\r\n            <RoundButton text = \"No\" color=\"bg-gray-800 text-white bg-opacity-20\"/>\r\n            <RoundButton text = \"Yes\" color=\"text-black bg-white text-gray-700\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nvar css = `\r\nflex flex-row\r\nspace-x-4\r\n`\r\n\r\nexport default QnaButtons\r\n","import React from 'react'\r\nimport QnaButtons from './QnaButtons'\r\n\r\nconst QnaInteractive = () => {\r\n    return (\r\n        <div className={css}>\r\n            <div className={ textCss }>\r\n                <svg className=\"w-5 h-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n                <div style={annoteStyle}>Finished?</div>\r\n            </div>\r\n            <QnaButtons />\r\n        </div>\r\n    )\r\n}\r\n\r\nvar textCss = \"flex flex-row items-center text-red-800 space-x-1 font-bold\"\r\nvar css =  \"pt-6 pr-5 flex flex-row justify-between\"\r\n\r\nvar annoteStyle = {\r\n    fontFamily: 'PT Sans',\r\n}\r\nexport default QnaInteractive\r\n","import React from 'react'\r\nimport QnaInteractive from './QnaInteractive'\r\n\r\nconst Qna = ({ question,answer,priority }) => {\r\n    var bg = 'bg-red-300'\r\n\r\n    if (Math.random() > 0.5){\r\n        bg = 'bg-yellow-200'\r\n    } else if (Math.random() > 0.5){\r\n        bg = 'bg-blue-200'\r\n    }\r\n\r\n    return (\r\n        <div style={qnaStyle} className={cardCss + priorityList[priority]}>\r\n            <div className= { questionCss } style={questionStyle}>\r\n                {question}\r\n            </div>\r\n            <div className={textCss}>{answer}</div>\r\n            <QnaInteractive />\r\n        </div>\r\n    )\r\n}\r\n\r\nvar priorityList = [\r\n    \"bg-blue-200\",\r\n    \"bg-yellow-200\",\r\n    \"bg-red-300\"\r\n]\r\n\r\nvar qnaStyle = {\r\n    scrollSnapAlign: 'start',\r\n}\r\n\r\nvar questionCss = `\r\ntext-black\r\nfont-bold\r\npb-5\r\nlg:pr-16\r\ntext-2xl\r\nrounded-lg\r\n`\r\nvar questionStyle ={\r\n    fontFamily: '\"RocknRoll One\",sans-serif'\r\n}\r\n\r\nvar textCss = `\r\ntext-gray-900\r\nfont-semibold\r\nlg:pr-16\r\n`\r\n\r\nvar cardCss = `\r\ntransform transition lg:hover:scale-105 duration-500\r\nlg:hover:-translate-y-5\r\ntext-gray-600\r\npy-8\r\npx-7\r\nrounded-lg\r\nshadow-inner\r\n`\r\n\r\nexport default Qna\r\n","import React from 'react'\r\nimport Qna from './Qna'\r\nconst Cards = () => {\r\n    return (\r\n        <div style= {cardsStyle} className = {cardsCss}>\r\n            <Qna priority={1} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={1} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={2} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={0} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={1} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={1} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={2} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={0} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={1} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n            <Qna priority={1} question= \"Does the task say anything about the running reaction?\"\r\n            answer = \"Yes! if one of the solutions are present in either of the things then this one happens and then that one happens corresponding to which the entire solution is a mess and you have just lost 5 marks for answering in such a way kudos to you\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nvar cardsCss = `\r\nbg-opacity-10 rounded-lg\r\nlg:p-5\r\npy-2\r\nsm:flex flex-col space-y-4\r\nmd:grid md:grid-cols-2 md:space-y-0\r\nlg:grid grid-flow-row lg:grid-cols-3 gap-6\r\n`\r\nvar cardsStyle = {\r\n    scrollSnapType : 'y mandatory'\r\n}\r\nexport default Cards","import './main.css';\nimport './fonts.css';\nimport Title from './components/Title'\nimport Header from './components/Header'\nimport Cards from './components/Cards'\n\nconst App = () => {\n  return (\n    <div className={appCss} style={appStyle}>\n      <Header />\n      <Title />\n      <Cards />\n    </div>\n);\n}\n\nvar appCss = \n\"absolute px-3 lg:py-3\";\n\nvar appStyle = {\n  height: '100vh',\n  webkitTapHighlightColor: 'rgba(0,0,0,0)',\n  webkitTapHighlightColor: 'transparent',\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\ndocument.body.style.backgroundColor = \"black\";\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}